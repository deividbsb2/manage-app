{"version":3,"sources":["webpack:///./src/app/manage/list/list.module.ts","webpack:///./src/app/manage/list/list.page.html","webpack:///./src/app/manage/list/list.page.scss","webpack:///./src/app/manage/list/list.page.ts","webpack:///./src/app/shared/api.service.ts"],"names":[],"mappings":"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","file":"manage-list-list-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ListPage } from './list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ListPage]\n})\nexport class ListPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Escolher Aplicativo\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-list>\\n    <ion-item-sliding *ngFor=\\\"let app of apps\\\" >\\n      <ion-item routerLink=\\\"/manage/{{app.id}}\\\">\\n        <ion-icon name=\\\"appstore\\\" slot=\\\"start\\\" color=\\\"primary\\\"></ion-icon>\\n        <ion-label>\\n          <h2>{{app.name}}</h2>\\n          <p>{{app.bundle_id}}</p>\\n        </ion-label>\\n      </ion-item>\\n      <ion-item-options side=\\\"end\\\">\\n        <ion-item-option routerLink=\\\"/manage/{{app.id}}\\\">\\n          Gerenciar\\n        </ion-item-option>\\n      </ion-item-options>\\n    </ion-item-sliding>\\n  </ion-list>\\n  <ion-list *ngIf=\\\"!apps\\\">\\n    <ion-item>NÃ£o possui aplicativos cadastrados</ion-item>\\n  </ion-list>\\n</ion-content>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { LoadingController, ToastController } from '@ionic/angular';\n\nimport { AppService } from '../../apps/shared/app.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.page.html',\n  styleUrls: ['./list.page.scss'],\n})\nexport class ListPage implements OnInit {\n  apps: any;\n\n  constructor(\n    public appService: AppService,\n    public loadingController: LoadingController,\n    public toastController: ToastController\n  ) { }\n\n  ngOnInit() {\n    this.getApps();\n  }\n\n  async getApps() {\n    const loading = await this.loadingController.create({\n      message: 'Loading'\n    });\n    await loading.present();\n    await this.appService.getAll()\n      .subscribe(res => {\n        console.log(res);\n        this.apps = res;\n        loading.dismiss();\n      }, err => {\n        console.log(err);\n        loading.dismiss();\n        this.presentToast('Erro ao consultar. Tente novamente!');\n      });\n  }\n\n  async presentToast(message: string) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000,\n      showCloseButton: true,\n      closeButtonText: 'Fechar'\n    });\n    toast.present();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\nconst apiUrl = environment.apiUrl;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      console.error('An error occurred:', error.error.message);\n    } else {\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    return throwError('Something bad happened; please try again later.');\n  }\n\n  private extractData(res: Response) {\n    let body: any = res;\n    if (body.data) {\n      body = body.data;\n    }\n    return body || {};\n  }\n\n  getAll(route: string): Observable<any> {\n    return this.http.get(`${apiUrl}/${route}`, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getById(route: string, id: number): Observable<any> {\n    const url = `${apiUrl}/${route}/${id}`;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  post(route: string, data): Observable<any> {\n    const url = `${apiUrl}/${route}`;\n    return this.http.post(url, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  put(route: string, id: number, data): Observable<any> {\n    const url = `${apiUrl}/${route}/${id}`;\n    return this.http.put(url, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  delete(route: string, id: number): Observable<{}> {\n    const url = `${apiUrl}/${route}/${id}`;\n    return this.http.delete(url, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n}\n"],"sourceRoot":""}